/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Everforest API 文件
 * 北14森森不息-露營活動票務系統的 API 文件
 * OpenAPI spec version: 1.0.0
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

export type PostHostProfileBody = {
  name: string;
  description?: string;
  email: string;
  phone: string;
  photo_url: string;
  photo_background_url?: string;
};

export type PostHostProfile201DataHostInfo = {
  memberId?: string;
  role?: string;
  name?: string;
  description?: string;
  email?: string;
  phone?: string;
  photo_url?: string;
  photo_background_url?: string;
};

export type PostHostProfile201Data = {
  host_info?: PostHostProfile201DataHostInfo;
};

export type PostHostProfile201 = {
  status?: string;
  message?: string;
  data?: PostHostProfile201Data;
};

export type PostHostProfile400 = {
  status?: string;
  message?: string;
};

export type PostHostProfile401 = {
  status?: string;
  message?: string;
};

export type PostHostProfile409 = {
  status?: string;
  message?: string;
};

export type PostHostProfile500 = {
  status?: string;
  message?: string;
};

export type GetHostProfile200DataHostInfo = {
  id?: string;
  member_id?: string;
  role?: string;
  name?: string;
  description?: string;
  verification_status?: string;
  phone?: string;
  email?: string;
  photo_url?: string;
  photo_background_url?: string;
  created_at?: string;
  updated_at?: string;
};

export type GetHostProfile200Data = {
  host_info?: GetHostProfile200DataHostInfo;
};

export type GetHostProfile200 = {
  status?: string;
  message?: string;
  data?: GetHostProfile200Data;
};

export type GetHostProfile401 = {
  status?: string;
  message?: string;
};

export type GetHostProfile404 = {
  status?: string;
  message?: string;
};

export type GetHostProfile500 = {
  status?: string;
  message?: string;
};

export type PatchHostProfileBody = {
  name?: string;
  description?: string;
  email?: string;
  phone?: string;
  photo_url?: string;
  photo_background_url?: string;
};

export type PatchHostProfile200DataHostInfo = {
  id?: string;
  member_id?: string;
  name?: string;
  description?: string;
  email?: string;
  phone?: string;
  photo_url?: string;
  photo_background_url?: string;
  verification_status?: string;
  updated_at?: string;
};

export type PatchHostProfile200Data = {
  host_info?: PatchHostProfile200DataHostInfo;
};

export type PatchHostProfile200 = {
  status?: string;
  message?: string;
  data?: PatchHostProfile200Data;
};

export type PatchHostProfile400 = {
  status?: string;
  message?: string;
};

export type PatchHostProfile401 = {
  status?: string;
  message?: string;
};

export type PatchHostProfile404 = {
  status?: string;
  message?: string;
};

export type PatchHostProfile500 = {
  status?: string;
  message?: string;
};

export type PostHostProfileAvatarBody = {
  /** 上傳的圖片檔案 */
  avatar?: Blob;
};

export type PostHostProfileAvatar200Data = {
  photo_url?: string;
};

export type PostHostProfileAvatar200 = {
  status?: string;
  message?: string;
  data?: PostHostProfileAvatar200Data;
};

export type PostHostProfileAvatar400 = {
  status?: string;
  message?: string;
};

export type PostHostProfileAvatar401 = {
  status?: string;
  message?: string;
};

export type PostHostProfileAvatar404 = {
  status?: string;
  message?: string;
};

export type PostHostProfileAvatar500 = {
  status?: string;
  message?: string;
};

export type PostHostProfileCoverBody = {
  /** 上傳的圖片檔案 */
  avatar?: Blob;
};

export type PostHostProfileCover200Data = {
  photo_url?: string;
};

export type PostHostProfileCover200 = {
  status?: string;
  message?: string;
  data?: PostHostProfileCover200Data;
};

export type PostHostProfileCover400 = {
  status?: string;
  message?: string;
};

export type PostHostProfileCover401 = {
  status?: string;
  message?: string;
};

export type PostHostProfileCover404 = {
  status?: string;
  message?: string;
};

export type PostHostProfileCover500 = {
  status?: string;
  message?: string;
};

/**
 * 會員登入後可建立主辦方資料，並同時將會員角色升級為 `host`。此 API 會設定新的 `access_token` Cookie，供後續主辦方權限使用。

📌 建立成功後會回傳主辦方資料並升級會員角色。

⚠️ 請確保已登入會員，且請求包含身份驗證 Cookie（access_token）。

 * @summary 創建主辦方資料
 */
export const postHostProfile = <TData = AxiosResponse<PostHostProfile201>>(
    postHostProfileBody: PostHostProfileBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/host/profile`,
      postHostProfileBody,options
    );
  }

/**
 * 取得目前登入主辦方的詳細資料，包含關聯的會員角色資訊。

📌 僅限已登入且身份為 `host` 的會員存取。

⚠️ 請確保請求附帶身份驗證 Cookie（access_token）。

 * @summary 取得主辦方資料
 */
export const getHostProfile = <TData = AxiosResponse<GetHostProfile200>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/host/profile`,options
    );
  }

/**
 * 已登入且為主辦方的會員可更新自己的主辦方資料，包含：

- 主辦方名稱
- 電話（會檢查是否與其他主辦方重複）
- Email（會檢查是否與其他主辦方重複）
- 活動簡介描述
- 大頭貼與背景圖片 URL

⚠️ 僅允許更新自己的資料，且欄位需為有效字串。

 * @summary 更新主辦方資料
 */
export const patchHostProfile = <TData = AxiosResponse<PatchHostProfile200>>(
    patchHostProfileBody: PatchHostProfileBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/host/profile`,
      patchHostProfileBody,options
    );
  }

/**
 * 已登入且為主辦方的會員可上傳一張新的頭像圖片。

⚠️ 僅支援 JPEG、JPG、PNG 格式，檔案大小限制為 2MB。

 * @summary 上傳主辦方頭像
 */
export const postHostProfileAvatar = <TData = AxiosResponse<PostHostProfileAvatar200>>(
    postHostProfileAvatarBody: PostHostProfileAvatarBody, options?: AxiosRequestConfig
 ): Promise<TData> => {const formData = new FormData();
if(postHostProfileAvatarBody.avatar !== undefined) {
 formData.append(`avatar`, postHostProfileAvatarBody.avatar)
 }

    return axios.post(
      `/host/profile/avatar`,
      formData,options
    );
  }

/**
 * 已登入且為主辦方的會員可上傳主辦方封面照。

⚠️ 僅支援 JPEG、JPG、PNG 格式，檔案大小限制為 2MB。

 * @summary 上傳主辦方封面照
 */
export const postHostProfileCover = <TData = AxiosResponse<PostHostProfileCover200>>(
    postHostProfileCoverBody: PostHostProfileCoverBody, options?: AxiosRequestConfig
 ): Promise<TData> => {const formData = new FormData();
if(postHostProfileCoverBody.avatar !== undefined) {
 formData.append(`avatar`, postHostProfileCoverBody.avatar)
 }

    return axios.post(
      `/host/profile/cover`,
      formData,options
    );
  }

export type PostHostProfileResult = AxiosResponse<PostHostProfile201>
export type GetHostProfileResult = AxiosResponse<GetHostProfile200>
export type PatchHostProfileResult = AxiosResponse<PatchHostProfile200>
export type PostHostProfileAvatarResult = AxiosResponse<PostHostProfileAvatar200>
export type PostHostProfileCoverResult = AxiosResponse<PostHostProfileCover200>
